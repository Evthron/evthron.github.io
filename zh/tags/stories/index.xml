<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Evthron&#39;s blog zh</title>
        <link>https://evthron.github.io/zh/tags/stories/</link>
        <description>Recent content on Evthron&#39;s blog zh</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <lastBuildDate>Sun, 09 Feb 2025 22:10:41 +0800</lastBuildDate><atom:link href="https://evthron.github.io/zh/tags/stories/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>找工作</title>
        <link>https://evthron.github.io/zh/tweet/job-search/</link>
        <pubDate>Sun, 09 Feb 2025 22:10:41 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/tweet/job-search/</guid>
        <description>&lt;p&gt;2025/02/10&lt;/p&gt;
&lt;p&gt;不找工作的話，就抬不起頭！這是狠狠掐着我心臟的殘酷現實、擠爆房間但我卻連摸都不想摸一下的大象。&lt;/p&gt;
&lt;p&gt;換個方向來看，只要我開始積極找工作，我就能堂堂正正地和大家一起抱怨「實習很難找」了。&lt;/p&gt;
&lt;p&gt;亡羊補牢，永遠不會太遲。&lt;/p&gt;
&lt;p&gt;在這裏做個記錄。&lt;/p&gt;
&lt;h2 id=&#34;簡歷&#34;&gt;簡歷&lt;/h2&gt;
&lt;p&gt;拖了很久，是假期的錯？還是生病的錯？不重要了，總之是生出了一份慘不忍睹的簡歷。&lt;/p&gt;
&lt;h3 id=&#34;latex&#34;&gt;LaTeX&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用 LaTeX 寫簡歷比較像個程序員。雖然我常常用 LaTeX 寫公式但卻從來沒用過來製作文件。&lt;/li&gt;
&lt;li&gt;找了&lt;a class=&#34;link&#34; href=&#34;https://www.latextemplates.com/template/medium-length-professional-cv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;模板 (latextemplates.com)&lt;/a&gt;，用 &lt;a class=&#34;link&#34; href=&#34;https://www.overleaf.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;overleaf.com&lt;/a&gt; 修改。我是不是該找個專門的離線軟件？算了，不重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技能&#34;&gt;技能&lt;/h3&gt;
&lt;p&gt;參考同學的寫法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Languages: Python, Shell, JavaScript, C++, Java, HTML, CSS, PHP&lt;/li&gt;
&lt;li&gt;Framework:  Tools &amp;amp; Hugo, React.js, Express&lt;/li&gt;
&lt;li&gt;Databases: MySQL, MongoDB&lt;/li&gt;
&lt;li&gt;Development Tools:  Git, Docker, Vim&lt;/li&gt;
&lt;li&gt;Machine Learning: scikit-learn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用得自信的語言是 Python，因為我寫了一大堆給自己用的 Python 腳本。HTML， CSS，和 JavaScript 則是為了這個網站正在不斷地寫。Shell 在 我自己的 Linux 上多少會用一點。C++，Java 和 PHP 就只有在上課的時候做作業用。會寫 Hugo Template 好像也稱不上會寫 Go。除了 Hugo，也就是做這個網站的工具外，其他的都是在上課學的。不過這一定是最無關緊要的部分，又不是我説了就會有人相信。&lt;/p&gt;
&lt;p&gt;DevOps 是什麼？不明所以的縮寫。&lt;/p&gt;
&lt;h2 id=&#34;project&#34;&gt;Project&lt;/h2&gt;
&lt;p&gt;得整理一下以前的課堂作業。真正是我自己自發做的，目前就只有這個網站了。不過做個網站誰都會，花了很多心血也看不出來。內容也和專業不沾邊。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;用學校的簡歷工具過了一遍，很明顯不及格。&lt;/p&gt;
&lt;p&gt;暫時先這樣。&lt;/p&gt;
&lt;h2 id=&#34;參考&#34;&gt;參考&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=Jp0lPj2-DQA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Intro to LaTeX : Learn to write beautiful math equations || Part 1 (Youtube)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://old.reddit.com/r/resumes/comments/utv9uw/how_do_i_write_a_cv_for_the_first_time/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How do I write CV for the first time (reddit)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://old.reddit.com/r/resumes/comments/tis0yn/how_to_write_a_resume_if_i_have_absolutely_no/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to write a resume if I have absolutely no experience, internship, or volunteering? (reddit)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://old.reddit.com/r/resumes/comments/873kmq/advice_how_to_make_a_software/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Make a (Software engineer/Programmer/Computer Science) Resume using my Resume as an example. (reddit)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://old.reddit.com/r/devops/comments/vfxmxv/what_exactly_is_devops/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What exactly is &amp;ldquo;DevOps&amp;rdquo; ?? (reddit)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025/02/18&lt;/p&gt;
&lt;p&gt;用 AI 修改了一下之後，現在 CV 至少看得過去了。同學説 CV 是沒人看的，只要有就行。&lt;/p&gt;
&lt;div class=&#34;pdf-embed&#34;&gt;
    &lt;iframe src=&#34;https://evthron.github.io/evthron-cv.pdf&#34; width=&#34;100%&#34; height=&#34;600&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;接下來是工作類型。雖然是什麼工作都好，但應該要有個目標才對。我對現在的行情可不怎麼瞭解。&lt;/p&gt;
&lt;p&gt;先看看有什麼需求，我收集了一些會在工作要求中出現的軟件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version control: Git, CI/CD pipelines&lt;/li&gt;
&lt;li&gt;Web: JavaScript, TypeScript, REST APIs, Responsive design, Redux/Context, RESTful APIs, React.js, React Native, MongoDB
– Cloud: Google Cloud Platform (GCP), Amazon Web Services (AWS), Firebase&lt;/li&gt;
&lt;li&gt;Data: Excel VBA, Python, Matlab, SQL, Tableau, R, S+, SAS, PowerBI&lt;/li&gt;
&lt;li&gt;Backend: Django, Spring Boot, Express.js&lt;/li&gt;
&lt;li&gt;Unit test: JUnit, Pytest, Mocha&lt;/li&gt;
&lt;li&gt;3D: SolidWorks, Fusion 360, AutoCAD&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;2025/02/22&lt;/p&gt;
&lt;p&gt;去求職展覽的關鍵，在於和業內人士交流，很多人拿著 CV 到處諮詢。講座內容倒沒什麼幫助。不過我遇上了同校的人，感覺不錯。&lt;/p&gt;
&lt;p&gt;AI 讓很多人都開始焦慮起來了。來展覽的人不只有學生，還吸引了一些本來在別的行業工作多年，現在想要轉行的人。&lt;/p&gt;
&lt;p&gt;我還碰到了個社交過於積極的人。他連招呼都沒打就直接問我要 LinkedIn。要不是我多問了幾句，他連我讀的是什麼學校、什麼專業都不清楚，這樣就算拿到聯絡方式也沒意義吧？&lt;/p&gt;
&lt;p&gt;有公司是專門用 AI 寫 CV 的。果然，CV 和求職信都是先用 ATS 自動根據關鍵字篩選的，面試前根本沒人看。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025/03/10&lt;/p&gt;
&lt;p&gt;一段時間沒看又變得焦慮起來了。最近很多都開始截止申請了。沒問題的，今天是個繼續的好日子，正正就是好幾個申請的截止日期，捏了一把冷汗……
很痛苦地檢查了一遍郵件，就算有多忙也好，每天都要看才可以，不然會錯過很多機會。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://evthron.github.io/zh/code/dotnet/&#34; &gt;.NET&lt;/a&gt; 是什麼玩意啊，Web Dev 課沒教…… 「我能熟練掌握 .NETCORE, ASP.NET 和 C#」……「裝久了就是真的」。&lt;/p&gt;
&lt;p&gt;修改了一下 CV，加入了我在講座學回來的「僱主最重視的三大特質」── 溝通合作能力、領導能力和主動思考。感覺比較充實。但 Project 還是不怎麼樣。&lt;/p&gt;
&lt;div class=&#34;pdf-embed&#34;&gt;
    &lt;iframe src=&#34;https://evthron.github.io/evthron-cv-2.pdf&#34; width=&#34;100%&#34; height=&#34;600&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;2025/04/15
面試沒有一套熟練的自我介紹是不行的……深深感覺到自己的準備不足。
當然也要提防常見的面試八股文……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025/04/19
一段時間沒看又變得焦慮焦慮焦慮焦慮起來了。
海投簡歷是「用戰術上的勤奮掩飾戰略上的懶惰」，而我既沒有戰術也沒有戰略。
重新再思考一下吧。時間只是變得越來越來越少，我是知道的，我體驗過無數次，永遠不會太遲，每當我認為太晚了而恐懼的時候，還可以更晚。這次的不同之處只在於這次是我無法掌握的而已。&lt;/p&gt;
&lt;p&gt;作業要交但自己什麼也不懂的時候，有兩種應對方法，一是專注於作業本身，一是從底層開始補全自己不足的知識。從短期來看，從頭開始學是愚蠢的，會花費不成回報時間。從長遠來看，只顧着眼前的困難才是愚蠢的。關鍵在於，作業涉及到的內容有沒有讓自己長期投入的價值。&lt;/p&gt;
&lt;p&gt;從這個角度考慮的話，找工作應該是一件牽扯一生的事吧？要認真一點研究才可以。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>畫畫的理由</title>
        <link>https://evthron.github.io/zh/posts/reason-to-draw/</link>
        <pubDate>Sat, 18 Jan 2025 02:52:51 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/reason-to-draw/</guid>
        <description>&lt;h2 id=&#34;動機&#34;&gt;動機&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;我完全沒有所謂畫畫的天賦，我想證明無論是什麼事，只要我想學就能學會。結果嘛，我可以很自信地説：「只要是我看得見的東西，我就畫得出來。」但自學只能學到自己需要的程度，沒有外界刺激的話也很難進步。&lt;/li&gt;
&lt;li&gt;我想培養一門像樣的興趣，所謂的心靈寄託。&lt;/li&gt;
&lt;li&gt;我本來是想畫些卡通角色來着，但現在已經不怎麼感興趣了。技術也不到家。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;好處&#34;&gt;好處&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;能仔細地觀察世界的形狀，不受任何文字概念的限制。事物不再有美麗和醜陋的區別，只有容易畫和難畫的區別。例如佈滿皺紋的老人會比皮膚光滑無暇的模特兒好畫。&lt;/li&gt;
&lt;li&gt;無論在什麼地方都能有意義地消磨時間，提升繪畫技術。要是已經畫得太多，沒有技術上的長進的話，至少也能把眼前的景象印在腦海裏。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;作畫是件奇妙的事——親手一筆一畫讓作品成形，事後卻無法說明創作當下的具體步驟。這並非什麼神祕現象，純粹是因為繪畫能讓我們暫時脫離慣性的符號化思考而已。&lt;/p&gt;
&lt;p&gt;我平常也是在用符號的方式來看待文字嗎？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>登山記</title>
        <link>https://evthron.github.io/zh/posts/mountain/</link>
        <pubDate>Sat, 18 Jan 2025 02:16:31 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/mountain/</guid>
        <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;糾結一個沒什麼潛力的故事讓我很不爽。寫了很久都寫不完，還是先把一部分放出來。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;風衣一行人下了山，來到了一家披薩館。餐館外依然寒風凜冽。大家躲在餐館裏面，冰冷的身體慢慢暖起來了。&lt;/p&gt;
&lt;p&gt;風衣蹲在點餐處前，掃視着展櫃裏的披薩款式。這家披薩館專門製作超級大塊的披薩，只要吃一塊就能吃飽。風衣喜歡吃的口味應該是印度咖喱辣肉，但紐約芝士完全沒有餡料的看起來十分吸引，既然沒有餡料，口味應該有過人之處吧？想着自己能回到這裏漫不經心地選擇晚餐，風衣不禁微笑了起來。回想起今天的艱辛經歷，或許一開始就應該取消這種有勇無謀的遠足。躲在温暖的商場裏亂逛説不定會比較好。&lt;/p&gt;
&lt;p&gt;就在風衣思考的時候，兜帽搶先跑到櫃枱，豪爽地點了三大塊，分別是夏威夷菠蘿香腸、經典莎樂美腸青椒和日式照燒雞。墨鏡點了黑松露蘑菇芝士。牛仔則是香草雞肉。&lt;/p&gt;
&lt;p&gt;風衣點的芝士披薩是最後上來的。看見大家的披薩都上齊了之後，兜帽誇張地宣佈：「好，開始分吧！」
「分什麽？」墨鏡不解。
「當然是把每個人的披薩切開然後平分。」
「但是我只想吃這個黑松露，別算上我。」
「我點了三種口味都拿出來分了，能多吃幾種，所謂要學會分享才能成長，你就不要計較了。」
「我的可是最貴的啊……等等，我還沒拍照！」
兜帽沒有理會墨鏡，強行把所有人的披薩，切成三四塊，然後分攤到每個人的盤子裏。披薩上面的菠蘿、香腸、牛肉和雞塊全部混在一起了。&lt;/p&gt;
&lt;p&gt;墨鏡很不悦地舉起手機，能拍的就只剩下桌上的一團混亂了。墨鏡充滿怨念地在手機上打字：「發不了帖，只好發動態控訴這種恐怖行徑……」
牛仔有點尷尬地笑着：「這樣就嘗不清楚每種的味道了，菠蘿就給你們吧。」&lt;/p&gt;
&lt;p&gt;風衣盯著桌上的披薩，心想：披薩固然很好吃，但也只是好吃而已。只要進肚子裏都會消化成碳水化合物、脂肪和蛋白質，變得被兜帽手弄得亂七八糟的披薩配料一樣。養分完全被身體吸收了之後，狼吞虎嚥的愉悅也會消失無蹤。無論是精緻的餐點還是流質食品，只要能補充營養就足夠了。&lt;/p&gt;
&lt;p&gt;風衣把餐桌上的墨西哥辣椒醬和胡椒粉擠在芝士披薩上面，大口吃了起來。墨鏡一臉訝異：「辣椒醬和芝士？我絕對不會這樣搭。」&lt;/p&gt;
&lt;p&gt;風衣不喜歡吃辣，這只不過是嚐鮮而已。把口味未知的辣椒醬放到芝士披薩上，讓風衣感到很新鮮。這和風衣來到這家披薩餐館覺得高興的原因一樣，只是大型披薩有新鮮感而已。如果風衣自己挑的話，應該會到更普通一點的餐館吃飯。&lt;/p&gt;
&lt;p&gt;大家一邊吃一邊聊起天來。兜帽感嘆：「我們偏偏在這麼冷的天氣才去爬山啊。偶爾在旅途裏經歷些磨難也好，印象才會更深刻嘛。」
墨鏡不滿：「才不是！雖然很久沒爬，但也應該找個合適一點的日子吧？虧兜帽你穿這麼少還能撐得住。」
牛仔説：「這樣一來，大家的耐寒抗性就上升了。之後我還想在冬天的時候去外國爬山呢，累積點經驗也好。」&lt;/p&gt;
&lt;p&gt;風衣靜靜聽着他們的話。辣椒醬似乎放得太多了，他正頂着舌頭上的灼熱感，不停冒汗。&lt;/p&gt;
&lt;p&gt;無論是好的經歷還是不好的經歷，被腦袋消化了之後都是一樣的。除了一點稱作回憶的養分以外，什麼都不會剩下。不過，除了這種常有的落寞感之外，風衣還有一種奇怪的感覺。&lt;/p&gt;
&lt;p&gt;似乎現在不是在這裡吃披薩的時候。&lt;/p&gt;
&lt;p&gt;大家的盤子裏都快空了，風衣這時才想起來，背包裏巧克力的疑問還沒解決。那排巧克力真的是牛仔放進去的嗎？風衣轉向牛仔發問：「剛才有把巧克力放在我的背包裏嗎？」&lt;/p&gt;
&lt;p&gt;牛仔一時不知道風衣向誰説話，頓了一頓：「我？」&lt;/p&gt;
&lt;p&gt;「嗯，我沒有帶巧克力上山。」&lt;/p&gt;
&lt;p&gt;牛仔認真地想了一下，回答：「不可能，因為今天我只帶了兩排巧克力。同一口味的我沒有帶兩排。」&lt;/p&gt;
&lt;p&gt;風衣打開背包，把被咬了一口的巧克力拿出來。「莫非這成了來歷不明的物件嗎？」風衣難得地覺得自己遇上了超自然事件。不過，風衣心裏還是很清楚，現實一點的答案，大概是媽媽在自己出發前塞進自己背包裏面的吧，回家之後才能確認了。&lt;/p&gt;
&lt;p&gt;兜帽從座位上站起來：「好了，那麼該走了，這麼早還不用急着回去吧？接下來去商場逛一下。」
牛仔提醒兜帽：「兜帽，走之前你該先擦一下嘴。」
兜帽的鼻子上沾了一塊黑松露醬。兜帽一邊笑着，一邊不好意思地拿起餐巾紙擦嘴。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>數學造輪子</title>
        <link>https://evthron.github.io/zh/posts/reinvent-the-wheel-in-maths/</link>
        <pubDate>Sat, 18 Jan 2025 01:50:37 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/reinvent-the-wheel-in-maths/</guid>
        <description>&lt;p&gt;中學的時候，數學課教到因式分解，也就是把像 x^2 + 3x + 2 分解成 (x+1)(x+2) 的時候，我聽説過可以用計算器程式快速算出答案。那時候我剛學會一點計算器編程的方法，想着：去網上抄別人的寫好的程序沒有意思，我能不能自己解決這個問題呢？&lt;/p&gt;
&lt;p&gt;我先數學角度開始着手，Ax^2 + Bx + C 到底是按照什麼算法變成 (Dx+E)(Fx+G) 的形式的呢？我用一些很基礎的運算把未知數搬來搬去。我當時沒學會配方法，無論怎麼做都只是徒勞無功。就算現在學會了，我也不知道要怎麼樣用配方法推導一元二次方程的公式。&lt;/p&gt;
&lt;p&gt;數學不好，我還可以編程嘛。既然會問到的因式分解的答案必定是整數，那我逐個答案測試不就可以了嗎？我便試着寫了個像質數篩一樣的程序。但計算器編程很受限制，能用的變數只有7個，也不能迴圈套迴圈，我最後也沒成功。&lt;/p&gt;
&lt;p&gt;後來我才發現，計算器內置了一元二次方程的公式。只要知道一個一元二次方程的答案，就能寫出它因式分解後的形式。大家説用計算器程式算的時候，並不是真的自己編了段程序。知道了標準的做法之後，我就把這事忘了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>和朋友保持聯絡</title>
        <link>https://evthron.github.io/zh/posts/contact-friends/</link>
        <pubDate>Wed, 25 Dec 2024 07:36:05 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/contact-friends/</guid>
        <description>&lt;p&gt;「保持聯絡」絕不是客套話，友誼是從見面的第一天起就開始玩的乒乓球，你來我往，不能停下來。但我空有這種觀念，還是當不成一個好朋友，因為只要離開了自己的視線，我就幾乎不會去關心別人過得怎麼樣。大部分人關心的事，我不是覺得害怕，就是覺得沒意義。&lt;/p&gt;
&lt;h2 id=&#34;志同道合&#34;&gt;志同道合&lt;/h2&gt;
&lt;p&gt;每個人都關心考試成績和將來的出路，但我總是避免思考這些問題。我學習只是順着自己淺薄的好奇心，沒有興趣鑽研複雜的題目；複習也只是害怕考試不及格，對分數沒有什麼追求。我害怕討論考試，和工作有關的事更是我的死穴，每次有人和我聊到這些話題，我就會小心翼翼地架起防禦，生怕別人發現我只是個不知道自己想要什麼的人。&lt;/p&gt;
&lt;p&gt;我的眼界很狹窄，想做到的事也沒有社會上的價值，非常微不足道。我想，自己的志向不是自己想出來的也可以。無論是打擊也好，鼓勵也好，如果有朋友的啓發，我應該能找到更像樣一點的目標才對。&lt;/p&gt;
&lt;h2 id=&#34;意氣相投&#34;&gt;意氣相投&lt;/h2&gt;
&lt;p&gt;如果只是想找人玩的話應該不難，但我已經對娛樂活動不感興趣了。我還花了很多心力排除這些干擾，故事、遊戲和音樂在我看來都是讓人分心的娛樂，是逃避現實的方法。就算我能靠着以前的經驗，興高采烈地分享自己對某部作品的感想，內心還是覺得不自在。&lt;/p&gt;
&lt;p&gt;這種想法讓我少了一個聯絡朋友的絕佳藉口。而且，一般人就算活在這些娛樂裏面，也不是一樣過得很好嗎？他們會説，一天到晚看短片、玩手遊又怎麼樣？只要在應該做事的時候把事情做好不就可以了嗎？工作的動力不就是賺更多錢，享受更豐富的娛樂嗎？我也不能昂首挺胸地叫其他人和我一樣試着擺脱娛樂，因為我就算這樣做了，也沒做出什麼成果。&lt;/p&gt;
&lt;p&gt;其實參加自己不感興趣的活動也不是壞事，就算我對事情本身不感興趣，聽別人分享他們的興趣愛好也是很有意思的，有時更會讓我大開眼界。要是朋友不做我沒有接觸過的事情，反而沒有意義。&lt;/p&gt;
&lt;p&gt;不過，這只能讓我痛快地接受邀請而已，更重要的問題是，我能從其他人的角度考慮，主動邀請他們參加娛樂活動嗎？我不知道。如果連我也沒有辦法貫徹「保持聯繫」到底的話，那還有誰會呢？&lt;/p&gt;
&lt;h2 id=&#34;開誠布公&#34;&gt;開誠布公&lt;/h2&gt;
&lt;p&gt;前面的理由都只是藉口而已，我知道要保持和朋友聯絡，就必須要發自內心地對他們的生活感興趣。&lt;/p&gt;
&lt;p&gt;很遺憾的是，要瞭解其他人的生活，就很難繞開社交網絡，但是我很害怕在社交網絡上觀看別人的生活，似乎只要疏遠了一段時間，對方就會變成我不認識的人，過着與我毫無關係的生活。我害怕看別人分享自己的生活，卻希望別人能讀我寫的文章。這樣不太公平吧？&lt;/p&gt;
&lt;p&gt;加上社交網絡是個毫不自由，讓人提心吊膽的地方。一是科技公司掌握着我的賬户的生殺大權，哪天我添加了太多朋友，系統就會認為我違反規定，把我的賬號停掉，抹殺我在網絡社會裏的存在；二是要在維持網絡形象和保護隱私之間走鋼索。我必須要用實名設賬號，不然就沒有人知道我是我，更不用説收穫名氣了，同時又不能暴露太多個人資訊，或留下會被人當作把柄的字句。&lt;/p&gt;
&lt;p&gt;要是能把別人在社交網絡上發的文章接到我的閲讀器裏就好了，這樣我會讀得輕鬆一點，但社交網站都很封閉，不一定允許我這樣做。我沒有解決這個問題的好辦法，只能先看我光憑通訊軟件能走多遠了。&lt;/p&gt;
&lt;h2 id=&#34;躊躇不決&#34;&gt;躊躇不決&lt;/h2&gt;
&lt;p&gt;就算我把煩惱想得清清楚楚，情況依舊沒有改變。似乎我應該做一套督促自己找人聊天的遊戲化系統，不過這很明顯不是問題的關鍵。在那之前，我更應該頻繁地在這裏分享自己正在做的事，草稿也好，半成品也好，至少我要做好這種單向的交流。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>交朋友的理由</title>
        <link>https://evthron.github.io/zh/posts/reason-to-socialize/</link>
        <pubDate>Wed, 20 Nov 2024 04:18:31 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/reason-to-socialize/</guid>
        <description>&lt;p&gt;我以前不太關心朋友的生活。如果關心他們的生活對我沒有好處的話，我就會覺得沒有意義，但如果是為了得到好處才去關心的話，我又會覺得自己很不真誠。直到我讀了 Getting Relationships Right 這本書之後，才發現我其實也是很渴望能和別人建立連繫的。我雖然害怕別人對自己的事情不敢興趣，不過如果他們真的能聽進去，我就會很驚喜；我雖然害怕聽到別人的生活比自己充實，但有時候也能從中發現一些讓我覺得很新奇的事情。關心別人是為了滿足我內心的感覺，而不是為了外在的利益，這是我交際的動力。&lt;/p&gt;
&lt;p&gt;我要陪朋友閒聊，發我不喜歡用的短信，參加我沒有興趣的聚會，和不認識的人搭話。不是為了&lt;a class=&#34;link&#34; href=&#34;https://evthron.github.io/zh/posts/knowledge-exchange/&#34; &gt;得到知識（交換知識的聊天挑戰 ）&lt;/a&gt;，也不是為了獲得幫助，而是為了互相了解大家的性格、興趣和目標。這是一件多麼冒險，多麼耗時，但又多麼好玩的事啊！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>橡皮擦的妙用</title>
        <link>https://evthron.github.io/zh/tweet/graphite-eraser/</link>
        <pubDate>Sat, 19 Oct 2024 04:53:17 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/tweet/graphite-eraser/</guid>
        <description>&lt;p&gt;畫畫用的鉛筆要削得又長又尖，一般的削筆機是做不到的，只能用美工刀削。我削鉛筆的時削出來的碳粉跑進了玻璃桌上的刮痕，看起來很髒。&lt;/p&gt;
&lt;p&gt;在所有顏料裏，石墨的污漬似乎是最難處理的。大部分顏料的構造都是色素溶在溶劑裏，所以只要用適合的溶劑就能洗掉。但石墨的結構註定了它不會溶化，雖然很容易脱落，但總是會黏在某個地方，也永遠不會變質。&lt;/p&gt;
&lt;p&gt;雖然石墨不溶於水，但我還是用紙巾沾了點水才開始擦桌子。水把紙弄軟之後，才能深入縫隙。而且粉末卡在刮痕裏的時候，不能光在表面大範圍地擦拭，而是要用指甲頂着紙巾，和刮痕成垂直方向來回打轉，把碳粉帶出來，才能擦得乾淨。&lt;/p&gt;
&lt;p&gt;就在我擦得差不多，收拾東西的時候。我看見了橡皮擦。&lt;/p&gt;
&lt;p&gt;橡皮擦和鉛筆一樣，是畫家的武器，同樣也要好好削尖，才可以精細地擦除畫上要留白的地方。不要固執地只用磨圓了的部分。&lt;/p&gt;
&lt;p&gt;橡皮塊掉在了桌上。感覺有點浪費，可以用來做什麼呢？我的手指放在橡皮塊上推了一下。&lt;/p&gt;
&lt;p&gt;黑色的條紋完美地消失了。&lt;/p&gt;
&lt;p&gt;對啊！橡皮擦不就是專門拿來對付石墨的嗎？太久沒用鉛筆寫字讓我連這個簡單的原理都忘了嗎？&lt;/p&gt;
&lt;p&gt;仔細想想，橡皮擦還真是個偉大的發明。不僅可以改變形狀，接觸紙上不平整的地方，擦除痕跡之後沾滿石墨的部分還能自動脱落，脱落的團塊的體積足夠大，可以輕鬆用人手清理。在沒有橡皮擦的時代，鉛筆不就和墨水筆沒兩樣？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>docker 連不上網的解決辦法和折騰的悲哀</title>
        <link>https://evthron.github.io/zh/posts/docker-panic/</link>
        <pubDate>Thu, 17 Oct 2024 19:37:47 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/docker-panic/</guid>
        <description>&lt;p&gt;電腦出了問題，我就會死纏爛打，絕不放棄，這種性格連我自己也感到很無奈。&lt;/p&gt;
&lt;p&gt;學校的作業要用到 Docker 開發網頁，把 Docker 想象成一個工具箱就可以。我發現網頁在 Docker 裏面連不上網，功課做不成了。很不巧，我用的是 Arch Linux。一般人用的操作系統不是 Windows 就是 MacOS。但 Arch 是要自己逐步把一個個組件拼起來的操作系統。好處是無論系統出了什麼問題都可以自己修理，壞處是會遇到很多一般人根本不會遇到的問題，可以説是作繭自縛。&lt;/p&gt;
&lt;p&gt;作業裏要連接外部網站的是一個 PHP 程式，是不是程式出錯了？老師給的程序應該不會錯，我對 PHP 又是一竅不通，隨便找了個網站的例子改了改程式碼，沒用。&lt;/p&gt;
&lt;p&gt;仔細看看網站報了什麼錯，&amp;lsquo;Temporary failure in name resolution&amp;rsquo;，DNS 出問題了。想必是因為我裝了個奇怪的 dnsmasq，雖然很危險但沒辦法只好暫時停用了。沒用。&lt;/p&gt;
&lt;p&gt;那麼是 Docker 的問題嗎？我對 Docker 也是一竅不通。説到底，這門課也用不着我們懂。本來只是輸一行 &lt;code&gt;docker compose up&lt;/code&gt; 的事，裏面發生什麼事情完全不用管。唉，沒辦法，我還是學了一下 Docker 的運作原理。Docker 可以克服不同電腦甚至操作系統之間水土不服的問題，把開發環境連網站打包成容器 (Container），就哪裏都可以用。原來如此!我還自作聰明地把 Dockerfile，也就是設定檔裏的一行 apt-get 刪掉了呢。 Arch 上下載軟件的工具是 pacman，不是 apt。但只要設定好開發環境裏用 Apache，就沒問題。我把 Container 刪了再重建，沒用。&lt;/p&gt;
&lt;p&gt;我慌了，這還不夠嗎？看來是網絡設定問題，這就很麻煩了，可以出錯的地方太多了。安裝 Arch 的時候，設置網絡是最頭疼的部分。光説軟件層面已經有一大堆能把人搞糊塗的概念：網絡接口、網絡管理器、主機、IP 地址、端口、域名、DNS、防火牆。如果是 Docker 要調整內部的網絡設定，那就要弄官方文檔上説的什麼「端口轉發」，我一點也看不懂。&lt;/p&gt;
&lt;p&gt;總之先上網找找看。最好先排除學校給的容器有問題的情況。原來只要一句就可以調試 Docker 網絡。 &lt;code&gt;docker run busybox ping google.com&lt;/code&gt;，借一個叫 busybox 的開發環境，向google 發一個乒乓球，看看對方會不會傳球回來。沒反應，丟包率 100%。&lt;/p&gt;
&lt;p&gt;網上的答案都説是 docker 是 DNS 設定出錯了。沒有辦法把 google.com 翻譯成真實的 IP 地址。要手動把 docker 的 dns 服務器改成 &lt;code&gt;8.8.8.8&lt;/code&gt;，也就是 Google 提供的 DNS 服務器。一樣沒用。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/etc/docker/daemon.json
{
    &amp;#34;dns&amp;#34;: [&amp;#34;8.8.8.8&amp;#34;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;這時我想起來，直接 ping IP 地址就可以排除 DNS 服務器的影響了。&lt;code&gt;docker run busybox ping 127.0.0.1&lt;/code&gt;，這次成功，確認了 Docker 可以連上自家主機。然後是&lt;code&gt;docker run busybox ping 8.8.8.8&lt;/code&gt;，但一樣不管用。&lt;/p&gt;
&lt;p&gt;説不定是防火牆的問題，乾脆關掉，沒用。我連防火牆軟件都試着從 ufw 換到 firewalld，還是沒用。&lt;/p&gt;
&lt;p&gt;這下就徹底沒辦法了，只能像無頭蒼蠅一樣在各大論壇遊走碰運氣。Arch wiki，Gentoo wiki，當然少不了 StackOverFlow。解決方法有一大堆，就是沒一種管用。別問我是什麼意思，我也不知道。按指示執行自己看不懂的步驟可是操作電腦的基本功。&lt;/p&gt;
&lt;h2 id=&#34;arch-wiki&#34;&gt;Arch wiki&lt;/h2&gt;
&lt;p&gt;在 /etc/docker/daemon.json 設定：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://wiki.archlinux.org/title/Docker#Starting_Docker_breaks_KVM_bridged_networking
{
  &amp;#34;iptables&amp;#34;: false
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;gentoo-wiki&#34;&gt;Gentoo wiki&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.gentoo.org/wiki/Docker#Networking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.gentoo.org/wiki/Docker#Networking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 /etc/sysctl.d/local.conf 裏設定：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;改-docker-composeyaml&#34;&gt;改 docker-compose.yaml&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/33780947/not-able-to-connect-to-network-inside-docker-container&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/33780947/not-able-to-connect-to-network-inside-docker-container&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;services:
  worker:
    build: .
    network_mode: host #added here
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用主機的網絡&#34;&gt;使用主機的網絡&lt;/h3&gt;
&lt;p&gt;這個辦法是有效的，繞過了問題，但好像不能和 &lt;code&gt;docker compose&lt;/code&gt; 一起用。
&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/a/5626362&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/a/5626362&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run busybox --network=&amp;#34;host&amp;#34; ping google.com
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;windows-式修理法&#34;&gt;Windows 式修理法&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/a/68474595&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/a/68474595&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl restart docker
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;nftables-flush&#34;&gt;nftables flush&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbs.archlinux.org/viewtopic.php?id=277653&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bbs.archlinux.org/viewtopic.php?id=277653&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://bbs.archlinux.org/viewtopic.php?id=277638&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bbs.archlinux.org/viewtopic.php?id=277638&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo nft flush ruleset
sudo pacman -R nftables 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;搞了這麼久，真的感覺自己在浪費時間，趕緊換到 Windows 弄 WSL (Windows Subsystem of linux）或者直接在 Linux 上裝虛擬機肯定會比較快。但我只要一被麻煩纏上就沒有心情思考其他的解決辦法。我説不定是在追求柳暗花明的感覺。&lt;/p&gt;
&lt;p&gt;幸好，36 個字節真的可以改變改變命運，答案其實就藏在同一條問題的深處。
&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/a/70452290&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/a/70452290&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl disable nftables
sudo systemctl stop nftables
sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我明明已經解除安裝 nftables 了，是沒有重啓，還是因為再下載了要用到 nftables 的 firewalld 呢？總之現在再試 &lt;code&gt;docker run busybox ping google.com&lt;/code&gt; 成功了！PHP 程式也順利拿到了網站的 JSON 檔案。真的高興得要拍手慶祝。&lt;/p&gt;
&lt;p&gt;搞了半天，我學會什麼了呢？重新温習了一遍 Arch 的上網設置，放棄了原本已經調整好的 dnsmasq，還知道了 nftables 和 iptables 有着神秘的關係。一天就這樣過去了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;nftables 和 iptables 指的是一套規則，負責處理訊息在各種 IP 上的接收和發送，設置好了可以充當防火牆。docker 能讓多個網站運行在相同的端口號上，原理説不定也是什麼端口轉發。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>地鐵畫畫</title>
        <link>https://evthron.github.io/zh/posts/drawing-on-train/</link>
        <pubDate>Sun, 13 Oct 2024 04:48:32 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/posts/drawing-on-train/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/posts/drawing-on-train/drawing-on-train.jpg" alt="Featured image of post 地鐵畫畫" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/viewpoint.jpg&#34;
	width=&#34;1775&#34;
	height=&#34;1147&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/viewpoint_hu_839945e388b989ee.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/viewpoint_hu_c76b33a40a147aca.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;viewpoint&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;154&#34;
		data-flex-basis=&#34;371px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;地鐵上，大家的握手機姿勢各種各樣：單手小指頂着機底，拇指滑屏幕；左手手掌捧着機背，右手食指滑屏幕；雙手在機背交疊，兩隻拇指在屏幕上快速敲擊；還有雙手抓着橫置的手機兩側，兩隻拇指在屏幕上劃圈。加上我的觀察角度也變來變去，有時是瞄旁邊的座位，有時是抬頭看坐在我正對面的人，或是側着身子抓把手的人。居然有種「橫看成嶺側成峯」的感覺。&lt;/p&gt;
&lt;p&gt;這個時候，我作為列車上唯一一個不想看手機的人，該做什麼才能消除盯着玻璃窗做白日夢的煩悶呢？就是把這些形態各異的手掌全部描在紙上，做一本手掌合輯。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-1.jpg&#34;
	width=&#34;4305&#34;
	height=&#34;6053&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-1_hu_7669cfb9a4be2395.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/hands-1_hu_3ddb5e870acd81b3.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;hands-1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;71&#34;
		data-flex-basis=&#34;170px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-2.jpg&#34;
	width=&#34;4326&#34;
	height=&#34;5916&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-2_hu_be910215918e93c7.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/hands-2_hu_7655c67b0d7c6f16.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;hands-2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;73&#34;
		data-flex-basis=&#34;175px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-3.jpg&#34;
	width=&#34;1142&#34;
	height=&#34;1819&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/hands-3_hu_16750292c011a189.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/hands-3_hu_80c17b6c52100ec1.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;hands-3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;62&#34;
		data-flex-basis=&#34;150px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;要盯着陌生人看肯定是不自在的。所以我會使用一些技巧。豎起本子，不能讓別人看見自己的畫紙；挑選離自己很遠的目標；不要一邊盯着人看一邊畫，要記住影像才在紙上動筆等等。不過這些技巧其實都不重要，最大的功臣還是手機。雖然我不太樂見，但正正是因為大家都無暇顧及手機之外的事物，我才有可乘之機。&lt;/p&gt;
&lt;p&gt;手掌合輯畫膩了，就改畫球鞋合輯，再接着畫髮型合輯。「列車上有數不清的模特兒站着不動讓我畫，真是個理想的畫室！」但他們隨便翻一下手掌，轉一下頭，我就只能傻傻地盯着紙上的半成品了。沒什麼好抱怨的，畢竟世界的一切景象本來就是稍縱即逝的。不僅落筆要快，萬一目標下車了，就要找另外一個姿勢相似的目標拼接起來。&lt;/p&gt;
&lt;p&gt;就這樣，我練就了一項無人能及的功夫：筆走龍蛇如入無人之境；目所能及之處，皆是素材。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-1.jpg&#34;
	width=&#34;4317&#34;
	height=&#34;6081&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-1_hu_3c872517c6563445.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/passengers-1_hu_e6cb154decf87009.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;passengers-1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;170px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-2.jpg&#34;
	width=&#34;4329&#34;
	height=&#34;6052&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-2_hu_27da63efb7f9c6ae.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/passengers-2_hu_4ec409aed7a9b897.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;passengers-2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;71&#34;
		data-flex-basis=&#34;171px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/shoes-1.jpg&#34;
	width=&#34;4356&#34;
	height=&#34;5951&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/shoes-1_hu_3f0cb00ce17e9e5.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/shoes-1_hu_a702252e376a03c.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;shoes-1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;73&#34;
		data-flex-basis=&#34;175px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/shoes-2.jpg&#34;
	width=&#34;1121&#34;
	height=&#34;1579&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/shoes-2_hu_35d9341c7ebb2222.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/shoes-2_hu_6d3ce144b78648e9.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;shoes-2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;170px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-1.jpg&#34;
	width=&#34;1146&#34;
	height=&#34;1326&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-1_hu_24701983dfb528c0.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/heads-1_hu_f8e0fd8d119db9b9.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;heads-1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;86&#34;
		data-flex-basis=&#34;207px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-2.jpg&#34;
	width=&#34;1140&#34;
	height=&#34;1471&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-2_hu_ec5591c453a76a62.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/heads-2_hu_462c5d4a0546e3b3.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;heads-2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;185px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-3.jpg&#34;
	width=&#34;1165&#34;
	height=&#34;1430&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-3_hu_306c880ce689724.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/heads-3_hu_7f3813b717791750.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;heads-3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;81&#34;
		data-flex-basis=&#34;195px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-4.jpg&#34;
	width=&#34;1135&#34;
	height=&#34;1810&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/heads-4_hu_8d089c136ed570ca.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/heads-4_hu_c7f7807e0cc8640e.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;heads-4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;62&#34;
		data-flex-basis=&#34;150px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-3.jpg&#34;
	width=&#34;1981&#34;
	height=&#34;3472&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-3_hu_62e2621dc67e6015.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/passengers-3_hu_f9ef8d04693a66a6.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;passengers-3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;57&#34;
		data-flex-basis=&#34;136px&#34;
	
&gt;
&lt;img src=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-4.jpg&#34;
	width=&#34;1132&#34;
	height=&#34;1722&#34;
	srcset=&#34;https://evthron.github.io/zh/posts/drawing-on-train/passengers-4_hu_cd542d7ce6dd9da3.webp 480w, https://evthron.github.io/zh/posts/drawing-on-train/passengers-4_hu_44310f924f9b8c8.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;passengers-4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;157px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>折紙 </title>
        <link>https://evthron.github.io/zh/tweet/origami/</link>
        <pubDate>Tue, 04 Jun 2024 21:14:54 +0800</pubDate>
        
        <guid>https://evthron.github.io/zh/tweet/origami/</guid>
        <description>&lt;p&gt;我在街上接到傳單的時候，總覺得如果要馬上扔到附近的垃圾筒裏面，那倒不如一開始就不要拿。那廢紙有什麼用呢？拿來折紙也是門手藝。記得小學的數學老師教過怎麼用紙拼出多面體，那比折什麼紙飛機有意思多了。&lt;/p&gt;
&lt;p&gt;從數學的角度看，折紙就和尺規作圖很像。我聽説過折紙連尺規三大不可能問題之一的三等分角都能做到。尺規的基本操作是畫直線和圓，那折紙的基本操作是什麼呢？我拿起手上的傳單試了一下，想必一個是把邊對摺作出垂直平分線，另一個是沿着對角對折作出對角線，都是把東西分成兩半的操作。在尺規作圖上把線三等分不難，那麼折紙有可能把線三等分呢？連三等分都做不到，真的有可能三等分角嗎？&lt;/p&gt;
&lt;p&gt;我在一本折紙書上找到了答案，有種上當受騙的感覺：只要折成四等份，然後把多出來的一份剪掉就可以。就和哥倫布立蛋一樣，只要用力把雞蛋往桌面一敲就可以了。為什麼腦子總是在這種地方轉不過彎來呢？&lt;/p&gt;
&lt;p&gt;不過，的確是有實在的方法等分線段的，不然折紙怎麼能超越尺規作圖呢？但是説來奇怪，在 Youtube 上少有用數學方法分析折紙的影片。三等分角的容易找到，但三分線段的反而找不到，所以我只好自己試了一下。在尺規作圖中，三等分線段的要領在於利用平行定理，把已有的三分線段搬到原有的線上面，重點是作平行線。回到折紙這裏，折一次紙只能作垂直線，但只要明白垂直的垂直就是平行，問題就一舉解決了。這裏分享一點經驗，實際折紙的時候是有誤差的，經常對不準。自制的三分線段和原本線段的夾角要儘量小，作垂直線的時候才輕鬆。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
