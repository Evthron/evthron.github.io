<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Evthron&#39;s blog en</title>
        <link>https://evthron.github.io/en/gallery/</link>
        <description>Recent content on Evthron&#39;s blog en</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Fri, 03 Jan 2025 12:52:38 +0800</lastBuildDate><atom:link href="https://evthron.github.io/en/gallery/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Watermelon peel</title>
        <link>https://evthron.github.io/en/gallery/watermelon/</link>
        <pubDate>Fri, 03 Jan 2025 12:52:38 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/watermelon/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/watermelon/watermelon.jpg" alt="Featured image of post Watermelon peel" /&gt;&lt;p&gt;No one should let fresh fruits rot in the air.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/watermelon/watermelon.jpg&#34;
	width=&#34;2318&#34;
	height=&#34;3465&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/watermelon/watermelon_hu_a9f63c6213663966.webp 480w, https://evthron.github.io/zh/gallery/watermelon/watermelon_hu_6d0fc387b5437a4a.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;watermelon-peel&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;160px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Minibus</title>
        <link>https://evthron.github.io/en/gallery/minibus/</link>
        <pubDate>Fri, 03 Jan 2025 12:49:46 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/minibus/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/minibus/minibus.jpg" alt="Featured image of post Minibus" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/minibus/minibus.jpg&#34;
	width=&#34;5100&#34;
	height=&#34;3254&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/minibus/minibus_hu_54b5702a5deabb1f.webp 480w, https://evthron.github.io/zh/gallery/minibus/minibus_hu_ffdabef877e14a87.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;minibus&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;376px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Beach</title>
        <link>https://evthron.github.io/en/gallery/beach/</link>
        <pubDate>Fri, 03 Jan 2025 12:35:41 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/beach/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/beach/beach.jpg" alt="Featured image of post Beach" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/beach/beach.jpg&#34;
	width=&#34;4247&#34;
	height=&#34;2951&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/beach/beach_hu_7de578de21f1eb19.webp 480w, https://evthron.github.io/zh/gallery/beach/beach_hu_ae262395fbb4ca21.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;beach&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Colour practice</title>
        <link>https://evthron.github.io/en/gallery/colour-practice/</link>
        <pubDate>Fri, 03 Jan 2025 12:17:01 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/colour-practice/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/colour-practice/colour-practice.png" alt="Featured image of post Colour practice" /&gt;&lt;ul&gt;
&lt;li&gt;Original&lt;/li&gt;
&lt;li&gt;Opposite hue&lt;/li&gt;
&lt;li&gt;Opposite brightness&lt;/li&gt;
&lt;li&gt;Opposite contrast&lt;/li&gt;
&lt;li&gt;Opposite hue + brightness&lt;/li&gt;
&lt;li&gt;Opposite hue + contrast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/colour-practice/colour-practice.png&#34;
	width=&#34;1719&#34;
	height=&#34;1000&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/colour-practice/colour-practice_hu_95b0d20f50e94e48.webp 480w, https://evthron.github.io/zh/gallery/colour-practice/colour-practice_hu_53c03cad29dfcfe7.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;flower-repaint&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/colour-practice/four-season.png&#34;
	width=&#34;512&#34;
	height=&#34;512&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/colour-practice/four-season_hu_948e7914eec0e6bd.webp 480w, https://evthron.github.io/zh/gallery/colour-practice/four-season_hu_70d1fadebf972aa2.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;four-season&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Labcoat</title>
        <link>https://evthron.github.io/en/gallery/labcoat/</link>
        <pubDate>Fri, 03 Jan 2025 12:11:18 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/labcoat/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/labcoat/labcoat.png" alt="Featured image of post Labcoat" /&gt;&lt;p&gt;This is much better as a drawing, but as a icon, somehow the original one (drawn with mouse) looks better.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/labcoat/labcoat.png&#34;
	width=&#34;800&#34;
	height=&#34;800&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/labcoat/labcoat_hu_d73469b8dea6ad3d.webp 480w, https://evthron.github.io/zh/gallery/labcoat/labcoat_hu_b80e31995069458c.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;labcoat&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Christmas house</title>
        <link>https://evthron.github.io/en/gallery/christmas-house/</link>
        <pubDate>Fri, 03 Jan 2025 12:01:35 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/christmas-house/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/christmas-house/christmas-house.png" alt="Featured image of post Christmas house" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/christmas-house/christmas-house.png&#34;
	width=&#34;4624&#34;
	height=&#34;3280&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/christmas-house/christmas-house_hu_fc75caf54b90894.webp 480w, https://evthron.github.io/zh/gallery/christmas-house/christmas-house_hu_4335d1873f3dca73.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;christmas-house&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Figures</title>
        <link>https://evthron.github.io/en/gallery/body-skeleton/</link>
        <pubDate>Fri, 03 Jan 2025 11:41:20 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/body-skeleton/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton.png" alt="Featured image of post Figures" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton.png&#34;
	width=&#34;5034&#34;
	height=&#34;3654&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton_hu_2e555c5813c23578.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton_hu_7cbe8d624dbffb14.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;body-skeleton&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;330px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/5-sides.png&#34;
	width=&#34;1754&#34;
	height=&#34;1240&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/5-sides_hu_64a37313990249a4.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/5-sides_hu_73fef4b12b42c701.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;5-sides&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;339px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-2.png&#34;
	width=&#34;629&#34;
	height=&#34;998&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-2_hu_e6d69d6d68fd0485.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-2_hu_7407101b9e7cb4e8.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;body-skeleton-2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;63&#34;
		data-flex-basis=&#34;151px&#34;
	
&gt;

&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-3.png&#34;
	width=&#34;710&#34;
	height=&#34;1039&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-3_hu_e60206b94235e2e1.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-3_hu_837216f343a8e469.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;body-skeleton-3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;68&#34;
		data-flex-basis=&#34;164px&#34;
	
&gt;

&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-4.png&#34;
	width=&#34;1417&#34;
	height=&#34;1417&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-4_hu_cf788b1c222d4f0f.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/body-skeleton-4_hu_a335ca9c7d509ecc.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;body-skeleton-4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-sketch-overlap.png&#34;
	width=&#34;1242&#34;
	height=&#34;1215&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/body-skeleton/body-sketch-overlap_hu_95cc8ce8bf26942c.webp 480w, https://evthron.github.io/zh/gallery/body-skeleton/body-sketch-overlap_hu_ea9e4da22dbf711a.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;body-sketch-overlap&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;102&#34;
		data-flex-basis=&#34;245px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>night view</title>
        <link>https://evthron.github.io/en/gallery/nightview/</link>
        <pubDate>Wed, 26 Jun 2024 02:46:52 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/nightview/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/nightview/nightview.png" alt="Featured image of post night view" /&gt;&lt;p&gt;I orginally drawn this picture as the background image of this site but it made the site looked messy. I then added a strong filter on it but it defeated my purpose. Clean website templates surely look professional but they lack personality.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/nightview/nightview.png&#34;
	width=&#34;1024&#34;
	height=&#34;768&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/nightview/nightview_hu_8b65b2114e927eb4.webp 480w, https://evthron.github.io/zh/gallery/nightview/nightview_hu_96ade8bcd438bdbe.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;nightview&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Oil pastel flower pot </title>
        <link>https://evthron.github.io/en/gallery/flower-pot/</link>
        <pubDate>Thu, 23 May 2024 04:03:14 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/flower-pot/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/flower-pot/flower-pot.png" alt="Featured image of post Oil pastel flower pot " /&gt;&lt;p&gt;I want to include more colour in my practice. After considering various tools I&amp;rsquo;ve got, I think oil pastel is the best pick since it is mixable and portable. I first studied how well the pigment mixes then gave it a try. The result is not bad isn&amp;rsquo;t it? We may thought oil pastel is child&amp;rsquo;s toy but it isn&amp;rsquo;t the case.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/flower-pot/flower-pot.png&#34;
	width=&#34;3119&#34;
	height=&#34;4086&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/flower-pot/flower-pot_hu_1e042674695515fc.webp 480w, https://evthron.github.io/zh/gallery/flower-pot/flower-pot_hu_e67fc14c91383c70.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;flower-pot&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;76&#34;
		data-flex-basis=&#34;183px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Accurate Colour Wheel</title>
        <link>https://evthron.github.io/en/gallery/accurate-colour-wheel/</link>
        <pubDate>Mon, 29 Jan 2024 05:05:42 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/accurate-colour-wheel/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/accurate-colour-wheel/accurate-colour-wheel.png" alt="Featured image of post Accurate Colour Wheel" /&gt;&lt;p&gt;Most colour wheels failed to isolate hue from lightness and chroma, so we can&amp;rsquo;t rely on them to make appealing colour palates. Luckily, the &lt;a class=&#34;link&#34; href=&#34;https://oklch.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;oklch colour space (oklch.com)&lt;/a&gt; separates the three elements of colours beautifully. Go play around with their colour picker. You will have a better understanding in colour.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &lt;a class=&#34;link&#34; href=&#34;https://evthron.github.io/en/oklch-color-wheel&#34; &gt;interactive color wheel&lt;/a&gt; I made.&lt;/p&gt;
&lt;style&gt;
  canvas {
    display: block;
    width: 50%;
    border-radius: 50%;
    cursor: grab;
    margin: auto;
  }
  .controls {
    display: block;
    margin: auto;
    background: white;
    padding: 20px;
    border-radius: 10px;
    width: 300px;
  }
  input[type=&#34;range&#34;] {
    width: 100%;
  }
  label {
    display: block;
    margin: 10px 0;
  }
&lt;/style&gt;

&lt;canvas id=&#34;colorWheel&#34; width=&#34;600&#34; height=&#34;600&#34;&gt;&lt;/canvas&gt;
&lt;div class=&#34;controls&#34;&gt;
  &lt;label&gt;
    Lightness (L): &lt;span id=&#34;lValue&#34;&gt;0.75&lt;/span&gt;
    &lt;input
      type=&#34;range&#34;
      id=&#34;lControl&#34;
      min=&#34;0&#34;
      max=&#34;1&#34;
      step=&#34;0.01&#34;
      value=&#34;0.75&#34;
    /&gt;
  &lt;/label&gt;
  &lt;label&gt;
    Chroma (C): &lt;span id=&#34;cValue&#34;&gt;0.12&lt;/span&gt;
    &lt;input
      type=&#34;range&#34;
      id=&#34;cControl&#34;
      min=&#34;0&#34;
      max=&#34;0.2&#34;
      step=&#34;0.01&#34;
      value=&#34;0.12&#34;
    /&gt;
  &lt;/label&gt;
  &lt;label&gt;
    Rotation: &lt;span id=&#34;rotationValue&#34;&gt;0&lt;/span&gt;°
    &lt;input
      type=&#34;range&#34;
      id=&#34;rotationControl&#34;
      min=&#34;0&#34;
      max=&#34;360&#34;
      step=&#34;15&#34;
      value=&#34;0&#34;
    /&gt;
  &lt;/label&gt;
  &lt;label&gt;
    Neutral Gray Lightness: &lt;span id=&#34;grayValue&#34;&gt;0.5&lt;/span&gt;
    &lt;input
      type=&#34;range&#34;
      id=&#34;grayControl&#34;
      min=&#34;0&#34;
      max=&#34;1&#34;
      step=&#34;0.01&#34;
      value=&#34;0.5&#34;
    /&gt;
  &lt;/label&gt;
  &lt;label&gt;
    Hue Offset: &lt;span id=&#34;hueOffsetValue&#34;&gt;0&lt;/span&gt;°
    &lt;input type=&#34;range&#34; id=&#34;hueOffsetControl&#34; min=&#34;0&#34; max=&#34;15&#34; value=&#34;0&#34; /&gt;
  &lt;/label&gt;
  &lt;button id=&#34;downloadBtn&#34; style=&#34;margin-top: 10px; padding: 8px 12px; background: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;&#34;&gt;
    Download image
  &lt;/button&gt;
&lt;/div&gt;

&lt;script&gt;
  const canvas = document.getElementById(&#34;colorWheel&#34;);
  const ctx = canvas.getContext(&#34;2d&#34;);
  const center = { x: 300, y: 300 };
  const outerRadius = 300;
  const innerRadius = 150;
  const gapWidth = 8;

  
  const lControl = document.getElementById(&#34;lControl&#34;);
  const cControl = document.getElementById(&#34;cControl&#34;);
  const rotationControl = document.getElementById(&#34;rotationControl&#34;);
  const grayControl = document.getElementById(&#34;grayControl&#34;);
  const hueOffsetControl = document.getElementById(&#34;hueOffsetControl&#34;);
  const lValue = document.getElementById(&#34;lValue&#34;);
  const cValue = document.getElementById(&#34;cValue&#34;);
  const rotationValue = document.getElementById(&#34;rotationValue&#34;);
  const grayValue = document.getElementById(&#34;grayValue&#34;);
  const hueOffsetValue = document.getElementById(&#34;hueOffsetValue&#34;);

  
  let params = {
    l: 0.75,
    c: 0.12,
    grayL: 0.5,
    hueOffset: 0,
    rotation: 0,
    isDragging: false,
    startAngle: 0,
  };

  
  function init() {
    lControl.addEventListener(&#34;input&#34;, updateParams);
    cControl.addEventListener(&#34;input&#34;, updateParams);
    rotationControl.addEventListener(&#34;input&#34;, updateParams);
    grayControl.addEventListener(&#34;input&#34;, updateParams);
    hueOffsetControl.addEventListener(&#34;input&#34;, updateParams);

    canvas.addEventListener(&#34;mousedown&#34;, startDrag);
    canvas.addEventListener(&#34;mousemove&#34;, drag);
    canvas.addEventListener(&#34;mouseup&#34;, endDrag);
    canvas.addEventListener(&#34;mouseleave&#34;, endDrag);

    updateParams();
  }

  function updateParams() {
    params.l = parseFloat(lControl.value);
    params.c = parseFloat(cControl.value);
    params.rotation = parseInt(rotationControl.value);
    params.grayL = parseFloat(grayControl.value);
    params.hueOffset = parseInt(hueOffsetControl.value);

    lValue.textContent = params.l.toFixed(2);
    cValue.textContent = params.c.toFixed(2);
    rotationValue.textContent = params.rotation;
    grayValue.textContent = params.grayL.toFixed(2);
    hueOffsetValue.textContent = params.hueOffset;
    document.body.style.backgroundColor = `oklch(${params.grayL} 0 0)`;

    drawColorWheel();
  }

  function startDrag(e) {
    params.isDragging = true;
    params.startAngle = getAngle(e) - params.rotation;
  }

  function drag(e) {
    if (!params.isDragging) return;
    const angle = getAngle(e);
    params.rotation = angle - params.startAngle;
    rotationControl.value = params.rotation;
    updateParams();
  }

  function endDrag() {
    params.isDragging = false;
  }

  function getAngle(e) {
    const rect = canvas.getBoundingClientRect();
    const x = e.clientX - rect.left - center.x;
    const y = e.clientY - rect.top - center.y;
    return (Math.atan2(y, x) * 180) / Math.PI;
  }

  function drawColorWheel() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    
    ctx.fillStyle = `oklch(${params.grayL} 0 0)`;
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    

    const rotationOffset = 15; 
    ctx.save();
    ctx.translate(center.x, center.y);
    ctx.rotate(((params.rotation + 15) * Math.PI) / 180);
    ctx.translate(-center.x, -center.y);

    
    const segmentAngle = (Math.PI * 2) / 12;
    const colourOffset = 4;

    for (let i = 0; i &lt; 12; i++) {
      
      const hue = (i * 30 + params.hueOffset + colourOffset * 30) % 360;

      
      ctx.fillStyle = `oklch(${params.l} ${params.c} ${hue})`;
      ctx.beginPath();
      ctx.moveTo(center.x, center.y);
      ctx.arc(
        center.x,
        center.y,
        outerRadius,
        i * segmentAngle,
        (i + 1) * segmentAngle
      );
      ctx.lineTo(
        center.x + innerRadius * Math.cos((i + 1) * segmentAngle),
        center.y + innerRadius * Math.sin((i + 1) * segmentAngle)
      );
      ctx.arc(
        center.x,
        center.y,
        innerRadius,
        (i + 1) * segmentAngle,
        i * segmentAngle,
        true
      );
      ctx.closePath();
      ctx.fill();
    }

    
    
    for (let i = 0; i &lt; 12; i++) {
      ctx.fillStyle = `oklch(${params.grayL} 0 0)`;
      ctx.beginPath();

      const angle = i * segmentAngle; 
      const tangentX = -Math.sin(angle);
      const tangentY = Math.cos(angle);
      const offset = gapWidth / 2;
      const newOuterRadius =
        innerRadius + ((outerRadius - innerRadius) * 7) / 8; 

      
      const outerStart = {
        x: center.x + newOuterRadius * Math.cos(angle) - tangentX * offset,
        y: center.y + newOuterRadius * Math.sin(angle) - tangentY * offset,
      };
      const outerEnd = {
        x: center.x + newOuterRadius * Math.cos(angle) + tangentX * offset,
        y: center.y + newOuterRadius * Math.sin(angle) + tangentY * offset,
      };
      const innerStart = {
        x: center.x + innerRadius * Math.cos(angle) - tangentX * offset,
        y: center.y + innerRadius * Math.sin(angle) - tangentY * offset,
      };
      const innerEnd = {
        x: center.x + innerRadius * Math.cos(angle) + tangentX * offset,
        y: center.y + innerRadius * Math.sin(angle) + tangentY * offset,
      };

      
      ctx.moveTo(outerStart.x, outerStart.y);
      ctx.lineTo(outerEnd.x, outerEnd.y);
      ctx.lineTo(innerEnd.x, innerEnd.y);
      ctx.lineTo(innerStart.x, innerStart.y);
      ctx.closePath();
      ctx.fill();
    }
    ctx.restore();
  }
  document.getElementById(&#34;downloadBtn&#34;).addEventListener(&#34;click&#34;, function () {
    const filename = `oklch_colorwheel_L${Math.round(
      params.l * 100
    )}_C${Math.round(params.c * 100)}_R${params.rotation}_G${Math.round(
      params.grayL * 100
    )}_H${params.hueOffset}.png`;

    const link = document.createElement(&#34;a&#34;);
    link.download = filename;
    link.href = canvas.toDataURL(&#34;image/png&#34;);
    link.click();
  });

  init();
&lt;/script&gt;

&lt;p&gt;Details about colours:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The 12 hues are evenly distributed, meaning they all looked distinct.&lt;/li&gt;
&lt;li&gt;But at extreme lightness or high chroma, some colours don&amp;rsquo;t exist and wheel will be forced to show the nearest colour.&lt;/li&gt;
&lt;li&gt;Chroma = 0.12 and Lightness = 75 is the highest chroma value that doesn&amp;rsquo;t cause gaps in the hue spectrum under the sRGB colour gamut.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hue&#34;&gt;Hue&lt;/h2&gt;
&lt;p&gt;Contrasting colours pairs are located at the opposite sides of the wheel, which are 180 degrees away. Pink and turquoise, red and cyan, orange and sky blue, yellow and ultramarine blue, lime and purple, and finally, green and magenta. A palate will look great if the colours used are evenly seperated, like 60 degrees (triangle) or 45 degress (square) from each other.&lt;/p&gt;
&lt;h2 id=&#34;lightness&#34;&gt;Lightness&lt;/h2&gt;
&lt;p&gt;On this wheel, all the colours are adjusted to the same lightness. This cures our colour bias.&lt;/p&gt;
&lt;p&gt;We thought colour have meanings but some of those are due to their innate lightness. We may thought yellow is happy and joyful but that&amp;rsquo;s just because yellow is brightest when saturated. Similarly, we may thought blue is calm and melancholic but that just because blue is darkest when saturated. from this colour wheel, we learnt that &amp;lsquo;gloomy yellow&amp;rsquo; and &amp;lsquo;joyful blue&amp;rsquo; exist although they not as colourful.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Using colours with equal lightness, we can create a mystic and almost unnerving effect, the colours are almost like glowing at the boundaries, as presented in the following drawing.&lt;/p&gt;
&lt;p&gt;This drawing is completely dull in terms of lightness. We can&amp;rsquo;t feel any sense of depth from this picture. This confuses our eyes and feels illusionary.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/no-contrast.png&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/no-contrast_hu_aae5c5984ff35e27.webp 480w, https://evthron.github.io/zh/gallery/accurate-colour-wheel/no-contrast_hu_56a68e30ae873f68.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;no-contrast&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;Now repaint it with the preset colour palate from MS Paint. This surely looked childish, but somehow it still looks more pleasant than the above one. That because contrast in lightness are reintroduced.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/naive-contrast.png&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/naive-contrast_hu_434a8da56b6af5df.webp 480w, https://evthron.github.io/zh/gallery/accurate-colour-wheel/naive-contrast_hu_c14ac9880d4e3418.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;naive-contrast&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
&lt;h2 id=&#34;chroma&#34;&gt;Chroma&lt;/h2&gt;
&lt;p&gt;If we darken the computer screen, everything on the screen we see becomes darker, but the colours doesn&amp;rsquo;t change. That&amp;rsquo;s because each pixel still shows the same ratio of light frequencies.&lt;/p&gt;
&lt;p&gt;I made colour charts to show colours at different chroma. I haven&amp;rsquo;t find out how to use them yet but they surely looked great. It also makes me wonder what creates the bumps in this chart.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/value-intensity-chart.png&#34;
	width=&#34;1790&#34;
	height=&#34;1512&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/accurate-colour-wheel/value-intensity-chart_hu_5692eeb610e74a41.webp 480w, https://evthron.github.io/zh/gallery/accurate-colour-wheel/value-intensity-chart_hu_244c23fec1490b0b.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;value-intensity-chart&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;284px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;It would be great if I can use it directly in painting software.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>The Lizard</title>
        <link>https://evthron.github.io/en/gallery/the-lizard/</link>
        <pubDate>Thu, 11 Jan 2024 06:05:12 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/the-lizard/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/the-lizard/the-lizard.png" alt="Featured image of post The Lizard" /&gt;&lt;p&gt;I picked the colour from my newly made colour chart and the result is unexpectedly good. I bought this Spider-Man series blind box full of hope but ended up getting the worst one out of eight. But there&amp;rsquo;s no fun drawing Spider-Man right?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/the-lizard/the-lizard.png&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/the-lizard/the-lizard_hu_90d0fa08953b99c3.webp 480w, https://evthron.github.io/zh/gallery/the-lizard/the-lizard_hu_6a90043cdc153ad6.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;the-lizard&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AI Generated Oil Painting</title>
        <link>https://evthron.github.io/en/gallery/agi/</link>
        <pubDate>Sat, 02 Dec 2023 10:32:58 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/agi/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/agi/london-cat.png" alt="Featured image of post AI Generated Oil Painting" /&gt;&lt;p&gt;This one is reward winning!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Prompt: a highly detailed oil painting of a cat walking in foggy london street, steampunk, gears, steam engine, by leonardo da Vinci, trending in artstation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Negative prompt: monochrome, blurry, jpeg artifacts, worst quality, watermark&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Steps: 30&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sampler: DPM++ 2M Karras&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CFG scale: 10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seed: 189248350&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Size: 768x512&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Model hash: cc6cb27103&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Model: v1-5-pruned-emaonly&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/agi/london-cat.png&#34;
	width=&#34;768&#34;
	height=&#34;512&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/agi/london-cat_hu_91126a9107f57e2c.webp 480w, https://evthron.github.io/zh/gallery/agi/london-cat_hu_36a543182dffd92e.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;london-cat&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;360px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Complex Scenary</title>
        <link>https://evthron.github.io/en/gallery/complex-scenary/</link>
        <pubDate>Sat, 02 Dec 2023 07:28:35 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/complex-scenary/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/complex-scenary/nightview.jpg" alt="Featured image of post Complex Scenary" /&gt;&lt;p&gt;&lt;img src=&#34;https://evthron.github.io/zh/gallery/complex-scenary/nightview.jpg&#34;
	width=&#34;2317&#34;
	height=&#34;2649&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/complex-scenary/nightview_hu_1becf8836fb4d95.webp 480w, https://evthron.github.io/zh/gallery/complex-scenary/nightview_hu_f9a1d061cf1f566b.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;complex-sketch&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;209px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;Sketching means capturing everything you see on paper. Look as closely as you can!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bench</title>
        <link>https://evthron.github.io/en/gallery/park/</link>
        <pubDate>Sun, 23 Jul 2023 04:39:53 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/park/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/park/bench.jpg" alt="Featured image of post Bench" /&gt;&lt;p&gt;A cardboard frame is necessary for sketching. A phone camera works too if you zoom in a bit.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/park/bench.jpg&#34;
	width=&#34;1344&#34;
	height=&#34;1581&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/park/bench_hu_24df1c926e0e9c67.webp 480w, https://evthron.github.io/zh/gallery/park/bench_hu_25e3302bff6ae22c.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;bench&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;204px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Shelf site cloud</title>
        <link>https://evthron.github.io/en/gallery/shelf-site-sky/</link>
        <pubDate>Mon, 22 May 2023 18:46:01 +0800</pubDate>
        
        <guid>https://evthron.github.io/en/gallery/shelf-site-sky/</guid>
        <description>&lt;img src="https://evthron.github.io/zh/gallery/shelf-site-sky/shelf-site-sky.jpg" alt="Featured image of post Shelf site cloud" /&gt;&lt;p&gt;See something draw something.
&lt;img src=&#34;https://evthron.github.io/zh/gallery/shelf-site-sky/shelf-site-sky.jpg&#34;
	width=&#34;512&#34;
	height=&#34;657&#34;
	srcset=&#34;https://evthron.github.io/zh/gallery/shelf-site-sky/shelf-site-sky_hu_be2b00bc8a688f86.webp 480w, https://evthron.github.io/zh/gallery/shelf-site-sky/shelf-site-sky_hu_803b918fb9de140.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;shelf-site-sky&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;187px&#34;
	
&gt;
&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
